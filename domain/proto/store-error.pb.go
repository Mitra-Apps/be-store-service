// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/store-error.proto

package store_error

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StoreErrorCode int32

const (
	StoreErrorCode_NO_PRODUCT_INSERTED                            StoreErrorCode = 1
	StoreErrorCode_STORE_ID_IS_REQUIRED                           StoreErrorCode = 2
	StoreErrorCode_DONT_HAVE_PERMISSION_TO_CREATE_OR_UPDATE_STORE StoreErrorCode = 3
	StoreErrorCode_PRODUCT_IS_REQUIRED                            StoreErrorCode = 4
	StoreErrorCode_PRODUCT_ID_SHOULD_BE_EMPTY                     StoreErrorCode = 5
	StoreErrorCode_UOM_IS_REQUIRED                                StoreErrorCode = 6
	StoreErrorCode_PRODUCT_TYPE_IS_REQUIRED                       StoreErrorCode = 7
	StoreErrorCode_STOCK_SHOULD_BE_POSITIVE                       StoreErrorCode = 8
	StoreErrorCode_PRODUCTS_ARE_ALREADY_REGISTERED                StoreErrorCode = 9
	StoreErrorCode_ERROR_WHEN_GETTING_RELATED_PRODUCT_TYPE        StoreErrorCode = 10
	StoreErrorCode_PRODUCT_TYPE_ID_IS_NOT_FOUND                   StoreErrorCode = 11
	StoreErrorCode_ERROR_WHEN_INSERTING_OR_UPDATING_PRODUCT       StoreErrorCode = 12
	StoreErrorCode_ERROR_WHEN_GETTING_PRODUCT_IMAGE               StoreErrorCode = 13
	StoreErrorCode_ERROR_WHEN_REMOVING_IMAGE_FROM_STORAGE         StoreErrorCode = 14
	StoreErrorCode_ERROR_WHEN_DELETING_PRODUCT_IMAGE              StoreErrorCode = 15
	StoreErrorCode_IMAGE_SHOULD_BE_IN_BASE_64_FORMAT              StoreErrorCode = 16
	StoreErrorCode_NAME_IS_REQUIRED                               StoreErrorCode = 17
	StoreErrorCode_PRICE_IS_REQUIRED                              StoreErrorCode = 18
	StoreErrorCode_ERROR_WHEN_GETTING_CLAIMS_FROM_JWT_TOKEN       StoreErrorCode = 19
)

// Enum value maps for StoreErrorCode.
var (
	StoreErrorCode_name = map[int32]string{
		1:  "NO_PRODUCT_INSERTED",
		2:  "STORE_ID_IS_REQUIRED",
		3:  "DONT_HAVE_PERMISSION_TO_CREATE_OR_UPDATE_STORE",
		4:  "PRODUCT_IS_REQUIRED",
		5:  "PRODUCT_ID_SHOULD_BE_EMPTY",
		6:  "UOM_IS_REQUIRED",
		7:  "PRODUCT_TYPE_IS_REQUIRED",
		8:  "STOCK_SHOULD_BE_POSITIVE",
		9:  "PRODUCTS_ARE_ALREADY_REGISTERED",
		10: "ERROR_WHEN_GETTING_RELATED_PRODUCT_TYPE",
		11: "PRODUCT_TYPE_ID_IS_NOT_FOUND",
		12: "ERROR_WHEN_INSERTING_OR_UPDATING_PRODUCT",
		13: "ERROR_WHEN_GETTING_PRODUCT_IMAGE",
		14: "ERROR_WHEN_REMOVING_IMAGE_FROM_STORAGE",
		15: "ERROR_WHEN_DELETING_PRODUCT_IMAGE",
		16: "IMAGE_SHOULD_BE_IN_BASE_64_FORMAT",
		17: "NAME_IS_REQUIRED",
		18: "PRICE_IS_REQUIRED",
		19: "ERROR_WHEN_GETTING_CLAIMS_FROM_JWT_TOKEN",
	}
	StoreErrorCode_value = map[string]int32{
		"NO_PRODUCT_INSERTED":                            1,
		"STORE_ID_IS_REQUIRED":                           2,
		"DONT_HAVE_PERMISSION_TO_CREATE_OR_UPDATE_STORE": 3,
		"PRODUCT_IS_REQUIRED":                            4,
		"PRODUCT_ID_SHOULD_BE_EMPTY":                     5,
		"UOM_IS_REQUIRED":                                6,
		"PRODUCT_TYPE_IS_REQUIRED":                       7,
		"STOCK_SHOULD_BE_POSITIVE":                       8,
		"PRODUCTS_ARE_ALREADY_REGISTERED":                9,
		"ERROR_WHEN_GETTING_RELATED_PRODUCT_TYPE":        10,
		"PRODUCT_TYPE_ID_IS_NOT_FOUND":                   11,
		"ERROR_WHEN_INSERTING_OR_UPDATING_PRODUCT":       12,
		"ERROR_WHEN_GETTING_PRODUCT_IMAGE":               13,
		"ERROR_WHEN_REMOVING_IMAGE_FROM_STORAGE":         14,
		"ERROR_WHEN_DELETING_PRODUCT_IMAGE":              15,
		"IMAGE_SHOULD_BE_IN_BASE_64_FORMAT":              16,
		"NAME_IS_REQUIRED":                               17,
		"PRICE_IS_REQUIRED":                              18,
		"ERROR_WHEN_GETTING_CLAIMS_FROM_JWT_TOKEN":       19,
	}
)

func (x StoreErrorCode) Enum() *StoreErrorCode {
	p := new(StoreErrorCode)
	*p = x
	return p
}

func (x StoreErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoreErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_store_error_proto_enumTypes[0].Descriptor()
}

func (StoreErrorCode) Type() protoreflect.EnumType {
	return &file_proto_store_error_proto_enumTypes[0]
}

func (x StoreErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *StoreErrorCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = StoreErrorCode(num)
	return nil
}

// Deprecated: Use StoreErrorCode.Descriptor instead.
func (StoreErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_store_error_proto_rawDescGZIP(), []int{0}
}

var File_proto_store_error_proto protoreflect.FileDescriptor

var file_proto_store_error_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2a, 0x9e, 0x05, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43,
	0x54, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x49, 0x52, 0x45, 0x44, 0x10, 0x02, 0x12, 0x32, 0x0a, 0x2e, 0x44, 0x4f, 0x4e, 0x54, 0x5f, 0x48,
	0x41, 0x56, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x4f, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x52,
	0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x49,
	0x44, 0x5f, 0x53, 0x48, 0x4f, 0x55, 0x4c, 0x44, 0x5f, 0x42, 0x45, 0x5f, 0x45, 0x4d, 0x50, 0x54,
	0x59, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4f, 0x4d, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x44,
	0x55, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x49, 0x52, 0x45, 0x44, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x4f, 0x43, 0x4b, 0x5f,
	0x53, 0x48, 0x4f, 0x55, 0x4c, 0x44, 0x5f, 0x42, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x08, 0x12, 0x23, 0x0a, 0x1f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x53,
	0x5f, 0x41, 0x52, 0x45, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x52, 0x45, 0x47,
	0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x09, 0x12, 0x2b, 0x0a, 0x27, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x57, 0x48, 0x45, 0x4e, 0x5f, 0x47, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f,
	0x52, 0x45, 0x4c, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x10, 0x0a, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x53, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x0b, 0x12, 0x2c, 0x0a, 0x28, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x57, 0x48, 0x45, 0x4e, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x4f, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x10, 0x0c, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x57, 0x48, 0x45, 0x4e, 0x5f, 0x47, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x0d, 0x12, 0x2a, 0x0a, 0x26,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x57, 0x48, 0x45, 0x4e, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56,
	0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x53,
	0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x10, 0x0e, 0x12, 0x25, 0x0a, 0x21, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x57, 0x48, 0x45, 0x4e, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x5f,
	0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x0f, 0x12,
	0x25, 0x0a, 0x21, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x48, 0x4f, 0x55, 0x4c, 0x44, 0x5f,
	0x42, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x36, 0x34, 0x5f, 0x46, 0x4f,
	0x52, 0x4d, 0x41, 0x54, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x11, 0x12, 0x15, 0x0a, 0x11,
	0x50, 0x52, 0x49, 0x43, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45,
	0x44, 0x10, 0x12, 0x12, 0x2c, 0x0a, 0x28, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x57, 0x48, 0x45,
	0x4e, 0x5f, 0x47, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x53,
	0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x4a, 0x57, 0x54, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10,
	0x13, 0x42, 0x91, 0x01, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x0f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d,
	0x69, 0x74, 0x72, 0x61, 0x2d, 0x41, 0x70, 0x70, 0x73, 0x2f, 0x62, 0x65, 0x2d, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0xca, 0x02, 0x05, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0xe2, 0x02, 0x11, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x05,
	0x50, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_proto_store_error_proto_rawDescOnce sync.Once
	file_proto_store_error_proto_rawDescData = file_proto_store_error_proto_rawDesc
)

func file_proto_store_error_proto_rawDescGZIP() []byte {
	file_proto_store_error_proto_rawDescOnce.Do(func() {
		file_proto_store_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_store_error_proto_rawDescData)
	})
	return file_proto_store_error_proto_rawDescData
}

var file_proto_store_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_store_error_proto_goTypes = []interface{}{
	(StoreErrorCode)(0), // 0: proto.StoreErrorCode
}
var file_proto_store_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_store_error_proto_init() }
func file_proto_store_error_proto_init() {
	if File_proto_store_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_store_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_store_error_proto_goTypes,
		DependencyIndexes: file_proto_store_error_proto_depIdxs,
		EnumInfos:         file_proto_store_error_proto_enumTypes,
	}.Build()
	File_proto_store_error_proto = out.File
	file_proto_store_error_proto_rawDesc = nil
	file_proto_store_error_proto_goTypes = nil
	file_proto_store_error_proto_depIdxs = nil
}
