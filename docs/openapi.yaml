# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: StoreService API
    description: Store service definition
    version: 0.0.1
paths:
    /api/v1/product-category:
        post:
            tags:
                - StoreService
            operationId: StoreService_UpsertProductCategory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductCategory'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpsertProductCategoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/product-category/{isIncludeDeactivated}:
        get:
            tags:
                - StoreService
            operationId: StoreService_GetProductCategories
            parameters:
                - name: isIncludeDeactivated
                  in: path
                  required: true
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProductCategoriesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/product-list/{storeId}/{isIncludeDeactivated}:
        get:
            tags:
                - StoreService
            operationId: StoreService_GetProductList
            parameters:
                - name: storeId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: isIncludeDeactivated
                  in: path
                  required: true
                  schema:
                    type: boolean
                - name: productTypeId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProductListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/product-type:
        post:
            tags:
                - StoreService
            operationId: StoreService_UpsertProductType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductType'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpsertProductTypeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/product-type/{productCategoryId}/{isIncludeDeactivated}:
        get:
            tags:
                - StoreService
            operationId: StoreService_GetProductTypes
            parameters:
                - name: productCategoryId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: isIncludeDeactivated
                  in: path
                  required: true
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProductTypesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/products:
        post:
            tags:
                - StoreService
            operationId: StoreService_UpsertProducts
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpsertProductsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpsertProductsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/products/{productId}:
        get:
            tags:
                - StoreService
            operationId: StoreService_GetProductById
            parameters:
                - name: productId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProductByIdResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/stores:
        get:
            tags:
                - StoreService
            description: List all stores
            operationId: StoreService_ListStores
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListStoresResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - StoreService
            description: Create a new store
            operationId: StoreService_CreateStore
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Store'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateStoreResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/stores/active-toggle/{isActive}:
        put:
            tags:
                - StoreService
            description: Open close store
            operationId: StoreService_OpenCloseStore
            parameters:
                - name: isActive
                  in: path
                  required: true
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OpenCloseStoreRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OpenCloseStoreResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/stores/my-store:
        get:
            tags:
                - StoreService
            description: Get Store By User ID
            operationId: StoreService_GetStoreByUserID
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoreByUserIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/stores/{ids}:
        delete:
            tags:
                - StoreService
            description: Delete a store by ID
            operationId: StoreService_DeleteStore
            parameters:
                - name: ids
                  in: path
                  required: true
                  schema:
                    type: array
                    items:
                        type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/stores/{storeId}:
        get:
            tags:
                - StoreService
            description: Get a store by ID
            operationId: StoreService_GetStore
            parameters:
                - name: storeId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoreResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - StoreService
            description: Update an existing store
            operationId: StoreService_UpdateStore
            parameters:
                - name: storeId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Store'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoreResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/uom:
        post:
            tags:
                - StoreService
            operationId: StoreService_UpsertUnitOfMeasure
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UnitOfMeasure'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpsertUnitOfMeasureResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/uom/{isIncludeDeactivated}:
        get:
            tags:
                - StoreService
            operationId: StoreService_GetUnitOfMeasures
            parameters:
                - name: isIncludeDeactivated
                  in: path
                  required: true
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUnitOfMeasuresResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateStoreResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/Store'
            description: Response message for creating a store
        GetProductByIdResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/Product'
        GetProductCategoriesResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProductCategory'
        GetProductListResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/Product'
        GetProductTypesResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProductType'
        GetStoreByUserIDResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/Store'
        GetStoreResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/Store'
            description: Response message for getting a store
        GetUnitOfMeasuresResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/UnitOfMeasure'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListStoresResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/Store'
                UserStore:
                    $ref: '#/components/schemas/Store'
            description: Response message for listing stores
        OpenCloseStoreRequest:
            type: object
            properties:
                storeId:
                    type: string
                isActive:
                    type: boolean
        OpenCloseStoreResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        Product:
            type: object
            properties:
                id:
                    type: string
                storeId:
                    type: string
                name:
                    type: string
                saleStatus:
                    type: boolean
                price:
                    type: number
                    format: double
                stock:
                    type: string
                uomId:
                    type: string
                productTypeId:
                    type: string
        ProductCategory:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                isActive:
                    type: boolean
        ProductType:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                isActive:
                    type: boolean
                productCategoryId:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        Store:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                storeName:
                    type: string
                storeDescription:
                    type: string
                address:
                    type: string
                city:
                    type: string
                state:
                    type: string
                zipCode:
                    type: string
                phone:
                    type: string
                email:
                    type: string
                website:
                    type: string
                status:
                    type: string
                isActive:
                    type: boolean
                locationLat:
                    type: number
                    format: double
                locationLng:
                    type: number
                    format: double
                tags:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoreTag'
                hours:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoreHour'
                images:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoreImage'
            description: Store message
        StoreHour:
            type: object
            properties:
                id:
                    type: string
                storeId:
                    type: string
                dayOfWeek:
                    type: integer
                    format: int32
                open:
                    type: string
                close:
                    type: string
                is24hours:
                    type: boolean
                isOpen:
                    type: boolean
            description: Store hour message
        StoreImage:
            type: object
            properties:
                id:
                    type: string
                storeId:
                    type: string
                imageType:
                    type: string
                imageUrl:
                    type: string
                imageBase64:
                    type: string
            description: Store image message
        StoreTag:
            type: object
            properties:
                id:
                    type: string
                tagName:
                    type: string
            description: Store tag message
        UnitOfMeasure:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                symbol:
                    type: string
                isActive:
                    type: boolean
        UpdateStoreResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/Store'
            description: Response message for updating a store
        UpsertProductCategoryResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        UpsertProductTypeResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        UpsertProductsRequest:
            type: object
            properties:
                storeId:
                    type: string
                productList:
                    type: array
                    items:
                        $ref: '#/components/schemas/Product'
        UpsertProductsResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        UpsertUnitOfMeasureResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
tags:
    - name: StoreService
